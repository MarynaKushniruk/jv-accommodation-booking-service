version: "3.8"
services:
  postgresdb:
    image: postgres
    container_name: postgres
    restart: unless-stopped
    env_file:
      - ./.env
    environment:
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_DB=$POSTGRES_DATABASE
    ports:
      - $POSTGRES_LOCAL_PORT:$POSTGRES_DOCKER_PORT
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 30s
      timeout: 30s
      retries: 10
    networks:
      - db_app
  app:
    depends_on:
      - postgresdb
    image: booking_api
    platform: linux/amd64
    container_name: app
    restart: unless-stopped
    build: .
    env_file:
      - ./.env
    ports:
      - $SPRING_LOCAL_PORT:$SPRING_DOCKER_PORT
      - $DEBUG_PORT:$DEBUG_PORT
    environment:
      SPRING_APPLICATION_JSON: '{
      "spring.datasource.url" : "jdbc:postgresql://postgresdb:$POSTGRES_DOCKER_PORT/$POSTGRES_DATABASE",
      "spring.datasource.username" : "$POSTGRES_USER",
      "spring.datasource.password" : "$POSTGRES_PASSWORD",
      "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.PostgreSQLDialect"
      }'
      JAVA_TOOL_OPTIONS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005"
    networks:
      - db_app
networks:
  db_app:
    driver: bridge
